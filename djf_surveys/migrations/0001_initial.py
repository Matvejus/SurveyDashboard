# Generated by Django 4.1.7 on 2024-03-09 03:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organization', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dimension',
            fields=[
                ('id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(blank=True, help_text='Unique key for this question, fill in the blank if you want to use for automatic generation.', max_length=225, null=True, unique=True, verbose_name='key')),
                ('label', models.CharField(help_text='Enter your question in here.', max_length=500, verbose_name='label')),
                ('type_field', models.PositiveSmallIntegerField(choices=[(0, 'Text'), (1, 'Number'), (2, 'Radio'), (3, 'Select'), (4, 'Multi Select'), (5, 'Text Area'), (6, 'URL'), (7, 'Email'), (8, 'Date'), (9, 'Rating')], verbose_name='type of input field')),
                ('choices', models.TextField(blank=True, help_text='If type of field is radio, select, or multi select, fill in the options separated by commas. Ex: Male, Female.', null=True, verbose_name='choices')),
                ('help_text', models.CharField(blank=True, help_text='You can add a help text in here.', max_length=200, null=True, verbose_name='help text')),
                ('required', models.BooleanField(default=True, help_text='If True, the user must provide an answer to this question.', verbose_name='required')),
                ('ordering', models.PositiveIntegerField(default=0, help_text='Defines the question order within the surveys.', verbose_name='choices')),
                ('dimension', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='djf_surveys.dimension')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='djf_surveys.level')),
            ],
            options={
                'verbose_name': 'question',
                'verbose_name_plural': 'questions',
                'ordering': ['ordering'],
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.TextField(default='', verbose_name='description')),
                ('slug', models.SlugField(default='', max_length=225, verbose_name='slug')),
                ('editable', models.BooleanField(default=True, help_text="If False, user can't edit record.", verbose_name='editable')),
                ('deletable', models.BooleanField(default=True, help_text="If False, user can't delete record.", verbose_name='deletable')),
                ('duplicate_entry', models.BooleanField(default=False, help_text='If True, user can resubmit.', verbose_name='mutiple submissions')),
                ('private_response', models.BooleanField(default=False, help_text='If True, only admin and owner can access.', verbose_name='private response')),
                ('can_anonymous_user', models.BooleanField(default=False, help_text='If True, user without authentatication can submit.', verbose_name='anonymous submission')),
                ('org_type', models.CharField(blank=True, max_length=200, verbose_name='Organization type')),
                ('collaboration_network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='network', to='organization.collaborationnetwork', verbose_name='Collaboration Network')),
                ('questions', models.ManyToManyField(blank=True, help_text='Select questions for this survey.', related_name='surveys', to='djf_surveys.question', verbose_name='questions')),
            ],
            options={
                'verbose_name': 'survey',
                'verbose_name_plural': 'surveys',
            },
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djf_surveys.survey', verbose_name='survey')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'user answer',
                'verbose_name_plural': 'user answers',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='SubDimension',
            fields=[
                ('id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('dimension', models.ManyToManyField(related_name='sub_dimensions', to='djf_surveys.dimension')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='subdimension',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='djf_surveys.subdimension'),
        ),
        migrations.CreateModel(
            name='EditField',
            fields=[
                ('id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('options', models.TextField(help_text='Options separated by commas. Ex: Option1, Option2', verbose_name='options')),
                ('dimension', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dimension_edit_fields', to='djf_surveys.dimension')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='level_edit_fields', to='djf_surveys.level')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edit_fields_questions', to='djf_surveys.question')),
                ('subdimension', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subdimension_edit_fields', to='djf_surveys.subdimension')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edit_fields', to='djf_surveys.survey')),
            ],
        ),
        migrations.AddField(
            model_name='dimension',
            name='level',
            field=models.ManyToManyField(related_name='dimensions', to='djf_surveys.level'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('value', models.TextField(help_text='The value of the answer given by the user.', verbose_name='value')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='djf_surveys.question', verbose_name='question')),
                ('user_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djf_surveys.useranswer', verbose_name='user answer')),
            ],
            options={
                'verbose_name': 'answer',
                'verbose_name_plural': 'answers',
                'ordering': ['question__ordering'],
            },
        ),
    ]
